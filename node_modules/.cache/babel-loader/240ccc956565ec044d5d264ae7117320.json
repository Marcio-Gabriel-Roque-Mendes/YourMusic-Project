{"ast":null,"code":"var _jsxFileName = \"/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MusicCard from './MusicCard';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pegaMusicas: {},\n      qualquer: []\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    const pegaMusicas = await getMusics(id);\n    this.setState({\n      pegaMusicas: pegaMusicas[0],\n      qualquer: pegaMusicas.filter(songTrackId => songTrackId.trackId)\n    });\n  }\n\n  render() {\n    const {\n      pegaMusicas,\n      qualquer\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"artist-name\",\n        children: [' ', pegaMusicas.artistName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"album-name\",\n        children: [' ', pegaMusicas.collectionName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), qualquer.map(cadaMusica => /*#__PURE__*/_jsxDEV(MusicCard, {\n        previewUrl: cadaMusica.previewUrl,\n        trackName: cadaMusica.trackName,\n        trackId: cadaMusica.trackId\n      }, cadaMusica.trackName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/Album.jsx"],"names":["React","Component","PropTypes","MusicCard","Header","getMusics","Album","state","pegaMusicas","qualquer","componentDidMount","match","props","params","id","setState","filter","songTrackId","trackId","render","artistName","collectionName","map","cadaMusica","previewUrl","trackName","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KADoB;AAAA;;AAML,QAAjBC,iBAAiB,GAAG;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAASD,MAAf;AACA,UAAML,WAAW,GAAG,MAAMH,SAAS,CAACS,EAAD,CAAnC;AACA,SAAKC,QAAL,CAAc;AACZP,MAAAA,WAAW,EAAEA,WAAW,CAAC,CAAD,CADZ;AAEZC,MAAAA,QAAQ,EAAED,WAAW,CAACQ,MAAZ,CAAoBC,WAAD,IAAiBA,WAAW,CAACC,OAAhD;AAFE,KAAd;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA4B,KAAKF,KAAvC;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,uBAAY,aAAf;AAAA,mBACG,GADH,EAEGC,WAAW,CAACY,UAFf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAG,uBAAY,YAAf;AAAA,mBACG,GADH,EAEGZ,WAAW,CAACa,cAFf;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAUGZ,QAAQ,CAACa,GAAT,CAAcC,UAAD,iBACZ,QAAC,SAAD;AAEE,QAAA,UAAU,EAAGA,UAAU,CAACC,UAF1B;AAGE,QAAA,SAAS,EAAGD,UAAU,CAACE,SAHzB;AAIE,QAAA,OAAO,EAAGF,UAAU,CAACL;AAJvB,SACQK,UAAU,CAACE,SADnB;AAAA;AAAA;AAAA;AAAA,cADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAxC2B;;AA0C9BnB,KAAK,CAACoB,SAAN,GAAkB;AAChBf,EAAAA,KAAK,EAAET,SAAS,CAACyB,KAAV,CAAgB;AAAEd,IAAAA,MAAM,EAAEX,SAAS,CACvCyB,KAD8B,CACxB;AAAEb,MAAAA,EAAE,EAAEZ,SAAS,CAAC0B;AAAhB,KADwB;AAAV,GAAhB,EAC+BC;AAFtB,CAAlB;AAIA,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MusicCard from './MusicCard';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends Component {\n  state = {\n    pegaMusicas: {},\n    qualquer: [],\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    const pegaMusicas = await getMusics(id);\n    this.setState({\n      pegaMusicas: pegaMusicas[0],\n      qualquer: pegaMusicas.filter((songTrackId) => songTrackId.trackId),\n    });\n  }\n\n  render() {\n    const { pegaMusicas, qualquer } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <p data-testid=\"artist-name\">\n          {' '}\n          {pegaMusicas.artistName}\n        </p>\n        <p data-testid=\"album-name\">\n          {' '}\n          {pegaMusicas.collectionName}\n        </p>\n        {qualquer.map((cadaMusica) => (\n          <MusicCard\n            key={ cadaMusica.trackName }\n            previewUrl={ cadaMusica.previewUrl }\n            trackName={ cadaMusica.trackName }\n            trackId={ cadaMusica.trackId }\n          />\n        ))}\n      </div>\n    );\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({ params: PropTypes\n    .shape({ id: PropTypes.string }) }).isRequired,\n};\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}