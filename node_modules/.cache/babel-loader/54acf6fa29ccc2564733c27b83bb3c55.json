{"ast":null,"code":"var _jsxFileName = \"/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MusicCard from './MusicCard';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      pegaListaMusicas: {},\n      musicaPorId: [],\n      artistName: '',\n      collectionName: '',\n      artworkUrl100: ''\n    };\n\n    this.updateState = musicasRequisitadas => {\n      this.setState({\n        artistName: musicasRequisitadas[0].artistName,\n        collectionName: musicasRequisitadas[0].collectionName,\n        artworkUrl100: musicasRequisitadas[1].artworkUrl100\n      });\n    };\n\n    this.getListOfSongs = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const pegaMusicas = await getMusics(id);\n      this.setState({\n        pegaListaMusicas: pegaMusicas,\n        musicaPorId: pegaMusicas.filter(songTrackId => songTrackId.trackId)\n      }, () => this.updateState(pegaMusicas));\n    };\n  }\n\n  // async componentDidMount() {\n  //   const { match } = this.props;\n  //   const { params } = match;\n  //   const { id } = params;\n  //   const pegaMusicas = await getMusics(id);\n  //   this.setState({\n  //     pegaMusicas: pegaMusicas[0],\n  //     musicaPorId: pegaMusicas.filter((songTrackId) => songTrackId.trackId),\n  //   });\n  // }\n  componentDidMount() {\n    this.getListOfSongs();\n  }\n\n  render() {\n    const {\n      pegaListaMusicas,\n      musicaPorId,\n      artistName,\n      collectionName,\n      artworkUrl100\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-violet-100\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex justify-center flex-wrap mb-24 bg-violet-100 mt-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-48 w-52\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"album cover\",\n            src: artworkUrl100,\n            className: \"w-52 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-violet-800 font-bold\",\n            children: `${collectionName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-fuchsia-900\",\n            children: `Por ${artistName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"page-album\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"artist-name\",\n            children: [' ', pegaListaMusicas.artistName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"album-name\",\n            children: [' ', pegaListaMusicas.collectionName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), musicaPorId.map(cadaMusica => /*#__PURE__*/_jsxDEV(MusicCard, {\n            previewUrl: cadaMusica.previewUrl,\n            trackName: cadaMusica.trackName,\n            trackId: cadaMusica.trackId\n          }, cadaMusica.trackName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/Album.jsx"],"names":["React","Component","PropTypes","MusicCard","Header","getMusics","Album","state","pegaListaMusicas","musicaPorId","artistName","collectionName","artworkUrl100","updateState","musicasRequisitadas","setState","getListOfSongs","match","params","id","props","pegaMusicas","filter","songTrackId","trackId","componentDidMount","render","map","cadaMusica","previewUrl","trackName","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport MusicCard from './MusicCard';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\n\nclass Album extends Component {\n  state = {\n    pegaListaMusicas: {},\n    musicaPorId: [],\n    artistName: '',\n    collectionName: '',\n    artworkUrl100: '',\n  }\n\n  // async componentDidMount() {\n  //   const { match } = this.props;\n  //   const { params } = match;\n  //   const { id } = params;\n  //   const pegaMusicas = await getMusics(id);\n  //   this.setState({\n  //     pegaMusicas: pegaMusicas[0],\n  //     musicaPorId: pegaMusicas.filter((songTrackId) => songTrackId.trackId),\n  //   });\n  // }\n\n  componentDidMount() {\n    this.getListOfSongs();\n  }\n\n  updateState = (musicasRequisitadas) => {\n    this.setState({ artistName: musicasRequisitadas[0].artistName,\n      collectionName: musicasRequisitadas[0].collectionName,\n      artworkUrl100: musicasRequisitadas[1].artworkUrl100 });\n  }\n\n  getListOfSongs = async () => {\n    const { match: { params: { id } } } = this.props;\n    const pegaMusicas = await getMusics(id);\n    this.setState({ \n      pegaListaMusicas: pegaMusicas,\n      musicaPorId: pegaMusicas.filter((songTrackId) => songTrackId.trackId) },\n      () => this.updateState(pegaMusicas));\n  }\n\n  render() {\n    const { pegaListaMusicas, musicaPorId, artistName,\n    collectionName, artworkUrl100 } = this.state;\n    return (\n        <div className='bg-violet-100'>\n          <Header />\n        <section className='flex justify-center flex-wrap mb-24 bg-violet-100 mt-10' >\n        <div className='mr-48 w-52'>\n          <img alt=\"album cover\" src={artworkUrl100} className='w-52 rounded'/>\n          <h3 className='text-violet-800 font-bold'>{`${collectionName}`}</h3>\n          <p className='text-fuchsia-900'>{`Por ${artistName}`}</p>\n        </div>\n        <div data-testid=\"page-album\">\n          <p data-testid=\"artist-name\">\n            {' '}\n            {pegaListaMusicas.artistName}\n          </p>\n          <p data-testid=\"album-name\">\n            {' '}\n            {pegaListaMusicas.collectionName}\n          </p>\n          {musicaPorId.map((cadaMusica) => (\n            <MusicCard \n              key={cadaMusica.trackName}\n              previewUrl={cadaMusica.previewUrl}\n              trackName={cadaMusica.trackName}\n              trackId={cadaMusica.trackId} />\n          ))}\n        </div>\n      </section>\n      </div>\n    );\n  }\n}\nAlbum.propTypes = {\n  match: PropTypes.shape({ params: PropTypes\n    .shape({ id: PropTypes.string }) }).isRequired,\n};\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}