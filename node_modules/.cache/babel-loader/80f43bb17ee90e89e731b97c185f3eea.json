{"ast":null,"code":"var _jsxFileName = \"/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/MusicCard.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import Album from '../components/Header';\n\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport getMusics from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: false,\n      favoritesSongs: [],\n      carregando: false\n    };\n\n    this.onListFavoriteChange = async _ref => {\n      let {\n        target\n      } = _ref;\n      this.setState({\n        loading: true\n      });\n      const {\n        trackId\n      } = this.props;\n      const {\n        checked\n      } = target;\n      const {\n        favoritesSongs\n      } = this.state;\n      const pegaMusicaFavorita = await getMusics(trackId); // this.setState({ loading: true });\n      // await addSong({ trackId });\n      // this.setState({ loading: false });\n\n      if (checked) {\n        await addSong(pegaMusicaFavorita);\n        this.setState({\n          favoritesSongs: [...favoritesSongs, pegaMusicaFavorita]\n        });\n        this.setState({\n          loading: false\n        });\n      }\n\n      if (checked === false) {\n        await removeSong(trackId);\n        const CurrentFavorites = favoritesSongs.filter(musica => musica.trackId !== trackId);\n        this.setState({\n          favoritesSongs: CurrentFavorites\n        });\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      carregando: true\n    });\n    const favoritas = await getFavoriteSongs();\n    this.setState({\n      carregando: false,\n      favoritesSongs: favoritas\n    });\n  }\n\n  render() {\n    const {\n      previewUrl,\n      trackName,\n      trackId\n      /*artworkUrl100*/\n\n    } = this.props;\n    const {\n      loading,\n      favoritesSongs,\n      carregando\n    } = this.state;\n\n    const condicionalLoading = loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 43\n    }, this);\n\n    const condicioanlCarregando = carregando && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 49\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [condicionalLoading, condicioanlCarregando, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-16 flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-violet-800 font-bold mb-1\",\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"favorita\",\n          className: \"flex flex-row text-fuchsia-900\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mr-1.5 mt-1.5\",\n            children: \"Favoritar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"favorita\",\n            checked: favoritesSongs.some(song => song.trackId === trackId),\n            \"data-testid\": `checkbox-music-${trackId}`,\n            onChange: this.onListFavoriteChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.string.isRequired,\n  artworkUrl100: PropTypes.string.isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/MusicCard.jsx"],"names":["React","Component","PropTypes","addSong","removeSong","getFavoriteSongs","getMusics","MusicCard","state","loading","favoritesSongs","carregando","onListFavoriteChange","target","setState","trackId","props","checked","pegaMusicaFavorita","CurrentFavorites","filter","musica","componentDidMount","favoritas","render","previewUrl","trackName","condicionalLoading","condicioanlCarregando","some","song","propTypes","string","isRequired","artworkUrl100"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import Album from '../components/Header';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport getMusics from '../services/musicsAPI';\n\nclass MusicCard extends Component {\n  state = {\n    loading: false,\n    favoritesSongs: [],\n    carregando: false,\n  }\n\n  async componentDidMount() {\n    this.setState({ carregando: true });\n    const favoritas = await getFavoriteSongs();\n    this.setState({ carregando: false,\n      favoritesSongs: favoritas,\n    });\n  }\n\n  onListFavoriteChange = async ({ target }) => {\n    this.setState({ loading: true });\n    const { trackId } = this.props;\n    const { checked } = target;\n    const { favoritesSongs } = this.state;\n    const pegaMusicaFavorita = await getMusics(trackId);\n\n    // this.setState({ loading: true });\n    // await addSong({ trackId });\n    // this.setState({ loading: false });\n\n    if (checked) {\n      await addSong(pegaMusicaFavorita);\n      this.setState({ favoritesSongs: [...favoritesSongs, pegaMusicaFavorita] });\n      this.setState({ loading: false });\n    }\n    if (checked === false) {\n      await removeSong(trackId);\n      const CurrentFavorites = favoritesSongs\n        .filter((musica) => musica.trackId !== trackId);\n      this.setState({ favoritesSongs: CurrentFavorites });\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { previewUrl, trackName, trackId, /*artworkUrl100*/ } = this.props;\n    const { loading, favoritesSongs, carregando } = this.state;\n\n    const condicionalLoading = loading && <div>Carregando...</div>;\n    const condicioanlCarregando = carregando && <div>Carregando...</div>;\n    return (\n      <div>\n        {condicionalLoading}\n        {condicioanlCarregando}\n        <div className=\"mb-16 flex flex-col\">\n          {/* <img src={ artworkUrl100 } alt=\"artwork da imagem\" /> */}\n          <span className='text-violet-800 font-bold mb-1'>{ trackName }</span>\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador não suporta o elemento\n            {' '}\n            <code>audio</code>\n            .\n          </audio>\n          <label htmlFor=\"favorita\" className='flex flex-row text-fuchsia-900'>\n            <p className='mr-1.5 mt-1.5'>\n            Favoritar\n            </p>\n            <input\n              type=\"checkbox\"\n              name=\"favorita\"\n              checked={ favoritesSongs.some((song) => song.trackId === trackId) }\n              data-testid={ `checkbox-music-${trackId}` }\n              onChange={ this.onListFavoriteChange }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\nMusicCard.propTypes = {\n  previewUrl: PropTypes.string.isRequired,\n  trackName: PropTypes.string.isRequired,\n  trackId: PropTypes.string.isRequired,\n  artworkUrl100: PropTypes.string.isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}