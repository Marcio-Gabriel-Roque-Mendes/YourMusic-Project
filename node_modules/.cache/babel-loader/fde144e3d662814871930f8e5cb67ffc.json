{"ast":null,"code":"var _jsxFileName = \"/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/Search.jsx\";\nimport React, { Component } from 'react';\nimport { Link\n/* Route */\n} from 'react-router-dom';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport '../albunsList.css'; // var moment = require('moment'); // require moment().format(); \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isSearchButtonDisabled: true,\n      nameArtist: '',\n      loading: false,\n      todasMusicas: [],\n      nomeArtistaPosterior: ''\n    };\n\n    this.onInputChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validacaoCaracts();\n      });\n    };\n\n    this.validacaoCaracts = () => {\n      const {\n        nameArtist\n      } = this.state;\n      const minLengthCaracts = 2;\n\n      if (nameArtist.length >= minLengthCaracts) {\n        return this.setState({\n          isSearchButtonDisabled: false\n        });\n      }\n\n      return this.setState({\n        isSearchButtonDisabled: true\n      });\n    };\n\n    this.onSearchButtonClick = async event => {\n      const {\n        nameArtist\n      } = this.state;\n      event.preventDefault();\n      this.setState({\n        loading: true\n      }, async () => {\n        const nomeDoArtista = nameArtist;\n        const albumProcura = await searchAlbumsAPI(nomeDoArtista);\n        this.setState({\n          nameArtist: '',\n          loading: false,\n          todasMusicas: albumProcura,\n          nomeArtistaPosterior: nomeDoArtista\n        });\n      });\n    };\n\n    this.estruturarCadaAlbum = albuns => albuns.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Flex flex-row bg-green-600 border-double border-4 border-indigo-600 ml-5\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/album/${album.collectionId}`,\n        \"data-testid\": `link-to-album-${album.collectionId}`,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: album.artworkUrl100,\n          alt: album.artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), \"Escuta pr\\xE9via\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, album.collectionName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this));\n  }\n\n  render() {\n    const {\n      isSearchButtonDisabled,\n      nameArtist,\n      loading,\n      nomeArtistaPosterior,\n      todasMusicas\n    } = this.state;\n    const condicicaoLoading = loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Carregando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"nameArtist\",\n        children: [\"Nome do Artista:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"nameArtist\",\n          name: \"nameArtist\",\n          type: \"text\",\n          \"data-testid\": \"search-artist-input\",\n          maxLength: 40,\n          onChange: this.onInputChange,\n          value: nameArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"search-artist-button\",\n        type: \"submit\",\n        onClick: this.onSearchButtonClick,\n        disabled: isSearchButtonDisabled,\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n\n    const condicaoResultAlbuns = nomeArtistaPosterior.length !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Resultado de \\xE1lbuns de:\", ' ', nomeArtistaPosterior]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n\n    const condicaoSeRenderizaAlbum = todasMusicas.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nenhum \\xE1lbum foi encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this) : this.estruturarCadaAlbum(todasMusicas);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-search\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), condicicaoLoading, condicaoResultAlbuns, condicaoSeRenderizaAlbum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/marcio/Documentos/Projetos/TodosProjetos/Portfolio/Project YourMusic/src/pages/Search.jsx"],"names":["React","Component","Link","Header","searchAlbumsAPI","Search","state","isSearchButtonDisabled","nameArtist","loading","todasMusicas","nomeArtistaPosterior","onInputChange","target","name","value","type","checked","setState","validacaoCaracts","minLengthCaracts","length","onSearchButtonClick","event","preventDefault","nomeDoArtista","albumProcura","estruturarCadaAlbum","albuns","map","album","collectionId","artworkUrl100","artistName","collectionName","render","condicicaoLoading","condicaoResultAlbuns","condicaoSeRenderizaAlbum"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link /* Route */ } from 'react-router-dom';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport '../albunsList.css'\n\n// var moment = require('moment'); // require moment().format(); \n\nclass Search extends Component {\n  state = {\n    isSearchButtonDisabled: true,\n    nameArtist: '',\n    loading: false,\n    todasMusicas: [],\n    nomeArtistaPosterior: '',\n  }\n\n  onInputChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n\n    this.setState({\n      [name]: value,\n    }, () => { this.validacaoCaracts(); });\n  }\n\n  validacaoCaracts = () => {\n    const { nameArtist } = this.state;\n    const minLengthCaracts = 2;\n    if (nameArtist.length >= minLengthCaracts) {\n      return this.setState({ isSearchButtonDisabled: false });\n    }\n    return this.setState({ isSearchButtonDisabled: true });\n  }\n\n  onSearchButtonClick = async (event) => {\n    const { nameArtist } = this.state;\n    event.preventDefault();\n    this.setState({ loading: true }, async () => {\n      const nomeDoArtista = nameArtist;\n      const albumProcura = await searchAlbumsAPI(nomeDoArtista);\n      this.setState({\n        nameArtist: '',\n        loading: false,\n        todasMusicas: albumProcura,\n        nomeArtistaPosterior: nomeDoArtista,\n      });\n    });\n  }\n\n  estruturarCadaAlbum = (albuns) => albuns.map((album) => (\n    <div key={ album.collectionName } className='Flex flex-row bg-green-600 border-double border-4 border-indigo-600 ml-5'>\n      <Link\n        to={ `/album/${album.collectionId}` }\n        data-testid={ `link-to-album-${album.collectionId}` }\n      >\n        <img src={ album.artworkUrl100 } alt={ album.artistName } />\n\n        Escuta prévia\n        {' '}\n\n      </Link>\n      {/* <h4 key={ album.artistId }>\n        artistId:\n        {' '}\n        {album.artistId}\n        ,\n      </h4> */}\n      {/* <h2 key={ album.artistName }>\n        Nome do Artista:\n        {' '}\n        {album.artistName}\n        ,\n      </h2> */}\n      {/* <h4 key={ album.collectionId }>\n        collectionId:\n        {' '}\n        {album.collectionId}\n        ,\n      </h4> */}\n      {/* <h2 key={ album.collectionName }>\n        Nome do Album:\n        {' '}\n        {album.collectionName}\n        ,\n      </h2> */}\n      {/* <h4 key={ album.collectionPrice }>\n        Preço do Album:\n        {' '}\n        {`$ ${album.collectionPrice}`}\n        ,\n      </h4> */}\n      {/* <h4 key={ album.artworkUrl100 }>\n        artworkUrl100:\n        {' '}\n        {album.artworkUrl100}\n        ,\n      </h4> */}\n      {/* <h4 key={ album.releaseDate }>\n        Lançado em:\n        {' '}\n        {/* {moment(album.releaseDate).format('DD/MM/YYYY')} */}\n        {/* {moment(album.releaseDate).format('DD/MM/YYYY')} */}\n        {/* , */}\n      {/* </h4> */}\n      {/* <h4 key={ album.trackCount }>\n        trackCount:\n        {' '}\n        {album.trackCount}\n        ,\n      </h4> */}\n    </div>\n\n  ));\n\n  render() {\n    const { isSearchButtonDisabled,\n      nameArtist, loading, nomeArtistaPosterior, todasMusicas } = this.state;\n\n    const condicicaoLoading = loading ? <div>Carregando...</div> : (\n      <form>\n        <label htmlFor=\"nameArtist\" >\n          Nome do Artista:\n          <input\n            id=\"nameArtist\"\n            name=\"nameArtist\"\n            type=\"text\"\n            data-testid=\"search-artist-input\"\n            maxLength={ 40 }\n            onChange={ this.onInputChange }\n            value={ nameArtist }\n          />\n        </label>\n        { ' ' }\n        <button\n          data-testid=\"search-artist-button\"\n          type=\"submit\"\n          onClick={ this.onSearchButtonClick }\n          disabled={ isSearchButtonDisabled }\n        >\n          Pesquisar\n        </button>\n      </form>\n    );\n\n    const condicaoResultAlbuns = nomeArtistaPosterior.length !== 0 && (\n      <p>\n        Resultado de álbuns de:\n        {' '}\n        {nomeArtistaPosterior}\n      </p>\n    );\n\n    const condicaoSeRenderizaAlbum = todasMusicas.length === 0\n      ? <p>Nenhum álbum foi encontrado</p> : this.estruturarCadaAlbum(todasMusicas);\n\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        { condicicaoLoading }\n        {condicaoResultAlbuns}\n        {/* { this.estruturarCadaAlbum(todasMusicas) } */}\n        { condicaoSeRenderizaAlbum }\n\n      </div>\n    );\n  }\n}\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}